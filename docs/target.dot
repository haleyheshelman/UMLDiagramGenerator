digraph uml{rankdir=BT; concentrate=true;node[shape = box];AmazonLineParser->ILineParser [arrowhead="onormal",style="dashed"];AmazonLineParser[shape = "record",label=<{ AmazonLineParser|+ init() : void<br/>+ parse(String param, ) : String<br/>}>];AmazonLineParser->String [arrowhead="vee",style="dashed"];DataStandardizer1->ActionListener [arrowhead="onormal",style="dashed"];DataStandardizer1[shape = "record",label=<{ DataStandardizer1|- this0 : DataStandardizer<br/>|- init(DataStandardizer param, ) : void<br/>+ actionPerformed(ActionEvent param, ) : void<br/>}>];DataStandardizer1->DataStandardizer [arrowhead="vee"];DataStandardizer1->ActionEvent [arrowhead="vee",style="dashed"];DataStandardizer2->Runnable [arrowhead="onormal",style="dashed"];DataStandardizer2[shape = "record",label=<{ DataStandardizer2|- this0 : DataStandardizer<br/>|- init(DataStandardizer param, ) : void<br/>+ run() : void<br/>}>];DataStandardizer2->DataStandardizer [arrowhead="vee"];DataStandardizer2->DataStandardizer [arrowhead="vee",style="dashed"];DataStandardizer[shape = "record",label=<{ DataStandardizer|- company : String<br/>- data : String<br/>- frame : JFrame<br/>- topPanel : JPanel<br/>- txtField : JTextField<br/>- button : JButton<br/>- scrollPane : JScrollPane<br/>- textArea : JTextArea<br/>- label : JLabel<br/>- lp : ILineParser<br/>- companyMap : Map<br/>|+ init() : void<br/>- createAndShowGUI() : void<br/>+ execute() : void<br/>+ parse(String param, ) : void<br/>+ getCompany() : String<br/>+ getData() : String<br/>+ addLineParser(String param, ILineParser param, ) : void<br/>- setLineParser(ILineParser param, ) : void<br/>+ main(String[] param, ) : void<br/>}>];DataStandardizer->String [arrowhead="vee"];DataStandardizer->String [arrowhead="vee"];DataStandardizer->JFrame [arrowhead="vee"];DataStandardizer->JPanel [arrowhead="vee"];DataStandardizer->JTextField [arrowhead="vee"];DataStandardizer->JButton [arrowhead="vee"];DataStandardizer->JScrollPane [arrowhead="vee"];DataStandardizer->JTextArea [arrowhead="vee"];DataStandardizer->JLabel [arrowhead="vee"];DataStandardizer->ILineParser [arrowhead="vee"];DataStandardizer->Map [arrowhead="vee"];DataStandardizer->String [arrowhead="vee",style="dashed"];DataStandardizer->String [arrowhead="vee",style="dashed"];DataStandardizer->String [arrowhead="vee",style="dashed"];DataStandardizer->String [arrowhead="vee",style="dashed"];DataStandardizer->ILineParser [arrowhead="vee",style="dashed"];DataStandardizer->ILineParser [arrowhead="vee",style="dashed"];DataStandardizer->String[] [arrowhead="vee",style="dashed",label="0..n"];DataStandardizerTest[shape = "record",label=<{ DataStandardizerTest|+ init() : void<br/>+ testParseGoogle() : void<br/>+ testParseMicrosoft() : void<br/>+ testParseAmazon() : void<br/>+ testParseGroupon() : void<br/>}>];GoogleLineParser->ILineParser [arrowhead="onormal",style="dashed"];GoogleLineParser[shape = "record",label=<{ GoogleLineParser|+ init() : void<br/>+ parse(String param, ) : String<br/>}>];GoogleLineParser->String [arrowhead="vee",style="dashed"];GoogleLineParser->String [arrowhead="vee",style="dashed"];GrouponLineParser->ILineParser [arrowhead="onormal",style="dashed"];GrouponLineParser[shape = "record",label=<{ GrouponLineParser|+ init() : void<br/>+ parse(String param, ) : String<br/>}>];GrouponLineParser->String [arrowhead="vee",style="dashed"];GrouponLineParser->String [arrowhead="vee",style="dashed"];ILineParser[shape = "record",label=<{<i>ILineParser</i>|+ parse(String param, ) : String<br/>}>];ILineParser->String [arrowhead="vee",style="dashed"];ILineParser->String [arrowhead="vee",style="dashed"];MicrosoftLineParser->ILineParser [arrowhead="onormal",style="dashed"];MicrosoftLineParser[shape = "record",label=<{ MicrosoftLineParser|+ init() : void<br/>+ parse(String param, ) : String<br/>}>];MicrosoftLineParser->String [arrowhead="vee",style="dashed"];MicrosoftLineParser->String [arrowhead="vee",style="dashed"];}
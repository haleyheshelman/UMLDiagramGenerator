digraph uml{rankdir=BT;splines=ortho;concentrate=true;node[shape = box];Desktop[shape = "record",label=<{ Desktop|- peer : DesktopPeer<br/>|- init() : void<br/>+ getDesktop() : Desktop<br/>+ isDesktopSupported() : boolean<br/>+ isSupported(DesktopAction param, ) : boolean<br/>- checkFileValidation(File param, ) : void<br/>- checkActionSupport(DesktopAction param, ) : void<br/>- checkAWTPermission() : void<br/>+ open(File param, ) : void<br/>+ edit(File param, ) : void<br/>+ print(File param, ) : void<br/>+ browse(URI param, ) : void<br/>+ mail() : void<br/>+ mail(URI param, ) : void<br/>- checkExec() : void<br/>}>];Calendar->Serializable [arrowhead="onormal",style="dashed"];Calendar->Cloneable [arrowhead="onormal",style="dashed"];Calendar->Comparable [arrowhead="onormal",style="dashed"];Calendar[shape = "record",label=<{ <i>Calendar</i>|+ ERA : int<br/>+ YEAR : int<br/>+ MONTH : int<br/>+ WEEK_OF_YEAR : int<br/>+ WEEK_OF_MONTH : int<br/>+ DATE : int<br/>+ DAY_OF_MONTH : int<br/>+ DAY_OF_YEAR : int<br/>+ DAY_OF_WEEK : int<br/>+ DAY_OF_WEEK_IN_MONTH : int<br/>+ AM_PM : int<br/>+ HOUR : int<br/>+ HOUR_OF_DAY : int<br/>+ MINUTE : int<br/>+ SECOND : int<br/>+ MILLISECOND : int<br/>+ ZONE_OFFSET : int<br/>+ DST_OFFSET : int<br/>+ FIELD_COUNT : int<br/>+ SUNDAY : int<br/>+ MONDAY : int<br/>+ TUESDAY : int<br/>+ WEDNESDAY : int<br/>+ THURSDAY : int<br/>+ FRIDAY : int<br/>+ SATURDAY : int<br/>+ JANUARY : int<br/>+ FEBRUARY : int<br/>+ MARCH : int<br/>+ APRIL : int<br/>+ MAY : int<br/>+ JUNE : int<br/>+ JULY : int<br/>+ AUGUST : int<br/>+ SEPTEMBER : int<br/>+ OCTOBER : int<br/>+ NOVEMBER : int<br/>+ DECEMBER : int<br/>+ UNDECIMBER : int<br/>+ AM : int<br/>+ PM : int<br/>+ ALL_STYLES : int<br/>- STANDALONE_MASK : int<br/>+ SHORT : int<br/>+ LONG : int<br/>+ NARROW_FORMAT : int<br/>+ NARROW_STANDALONE : int<br/>+ SHORT_FORMAT : int<br/>+ LONG_FORMAT : int<br/>+ SHORT_STANDALONE : int<br/>+ LONG_STANDALONE : int<br/>- fields : int[]<br/>- isSet : boolean[]<br/>- stamp : int[]<br/>- time : long<br/>- isTimeSet : boolean<br/>- areFieldsSet : boolean<br/>- areAllFieldsSet : boolean<br/>- lenient : boolean<br/>- zone : TimeZone<br/>- sharedZone : boolean<br/>- firstDayOfWeek : int<br/>- minimalDaysInFirstWeek : int<br/>- cachedLocaleData : ConcurrentMap:Locale [I<br/>- UNSET : int<br/>- COMPUTED : int<br/>- MINIMUM_USER_STAMP : int<br/>- ALL_FIELDS : int<br/>- nextStamp : int<br/>- currentSerialVersion : int<br/>- serialVersionOnStream : int<br/>- serialVersionUID : long<br/>- ERA_MASK : int<br/>- YEAR_MASK : int<br/>- MONTH_MASK : int<br/>- WEEK_OF_YEAR_MASK : int<br/>- WEEK_OF_MONTH_MASK : int<br/>- DAY_OF_MONTH_MASK : int<br/>- DATE_MASK : int<br/>- DAY_OF_YEAR_MASK : int<br/>- DAY_OF_WEEK_MASK : int<br/>- DAY_OF_WEEK_IN_MONTH_MASK : int<br/>- AM_PM_MASK : int<br/>- HOUR_MASK : int<br/>- HOUR_OF_DAY_MASK : int<br/>- MINUTE_MASK : int<br/>- SECOND_MASK : int<br/>- MILLISECOND_MASK : int<br/>- ZONE_OFFSET_MASK : int<br/>- DST_OFFSET_MASK : int<br/>- FIELD_NAME : String[]<br/>- assertionsDisabled : boolean<br/>|- init() : void<br/>- init(TimeZone param, Locale param, ) : void<br/>+ getInstance() : Calendar<br/>+ getInstance(TimeZone param, ) : Calendar<br/>+ getInstance(Locale param, ) : Calendar<br/>+ getInstance(TimeZone param, Locale param, ) : Calendar<br/>- createCalendar(TimeZone param, Locale param, ) : Calendar<br/>+ getAvailableLocales() : Locale[]<br/>- computeTime() : void<br/>- computeFields() : void<br/>+ getTime() : Date<br/>+ setTime(Date param, ) : void<br/>+ getTimeInMillis() : long<br/>+ setTimeInMillis(long param, ) : void<br/>+ get(int param, ) : int<br/>- internalGet(int param, ) : int<br/>- internalSet(int param, int param, ) : void<br/>+ set(int param, int param, ) : void<br/>+ set(int param, int param, int param, ) : void<br/>+ set(int param, int param, int param, int param, int param, ) : void<br/>+ set(int param, int param, int param, int param, int param, int param, ) : void<br/>+ clear() : void<br/>+ clear(int param, ) : void<br/>+ isSet(int param, ) : boolean<br/>+ getDisplayName(int param, int param, Locale param, ) : String<br/>+ getDisplayNames(Locale param, ) : Map:String Integer<br/>- getDisplayNamesImpl(Locale param, ) : Map:String Integer<br/>- checkDisplayNameParams(int param, int param, int param, int param, Locale param, int param, ) : boolean<br/>- getFieldStrings(int param, int param, DateFormatSymbols param, ) : String[]<br/>- complete() : void<br/>- isExternallySet(int param, ) : boolean<br/>- getSetStateFields() : int<br/>- setFieldsComputed(int param, ) : void<br/>- setFieldsNormalized(int param, ) : void<br/>- isPartiallyNormalized() : boolean<br/>- isFullyNormalized() : boolean<br/>- setUnnormalized() : void<br/>- isFieldSet(int param, int param, ) : boolean<br/>- selectFields() : int<br/>- getBaseStyle(int param, ) : int<br/>- toStandaloneStyle(int param, ) : int<br/>- isStandaloneStyle(int param, ) : boolean<br/>- isNarrowStyle(int param, ) : boolean<br/>- isNarrowFormatStyle(int param, ) : boolean<br/>- aggregateStamp(int param, int param, ) : int<br/>+ getAvailableCalendarTypes() : Set:String<br/>+ getCalendarType() : String<br/>+ equals(Object param, ) : boolean<br/>+ hashCode() : int<br/>+ before(Object param, ) : boolean<br/>+ after(Object param, ) : boolean<br/>+ compareTo(Calendar param, ) : int<br/>+ add(int param, int param, ) : void<br/>+ roll(int param, boolean param, ) : void<br/>+ roll(int param, int param, ) : void<br/>+ setTimeZone(TimeZone param, ) : void<br/>+ getTimeZone() : TimeZone<br/>- getZone() : TimeZone<br/>- setZoneShared(boolean param, ) : void<br/>+ setLenient(boolean param, ) : void<br/>+ isLenient() : boolean<br/>+ setFirstDayOfWeek(int param, ) : void<br/>+ getFirstDayOfWeek() : int<br/>+ setMinimalDaysInFirstWeek(int param, ) : void<br/>+ getMinimalDaysInFirstWeek() : int<br/>+ isWeekDateSupported() : boolean<br/>+ getWeekYear() : int<br/>+ setWeekDate(int param, int param, int param, ) : void<br/>+ getWeeksInWeekYear() : int<br/>+ getMinimum(int param, ) : int<br/>+ getMaximum(int param, ) : int<br/>+ getGreatestMinimum(int param, ) : int<br/>+ getLeastMaximum(int param, ) : int<br/>+ getActualMinimum(int param, ) : int<br/>+ getActualMaximum(int param, ) : int<br/>+ clone() : Object<br/>- getFieldName(int param, ) : String<br/>+ toString() : String<br/>- appendValue(StringBuilder param, String param, boolean param, long param, ) : void<br/>- setWeekCountData(Locale param, ) : void<br/>- updateTime() : void<br/>- compareTo(long param, ) : int<br/>- getMillisOf(Calendar param, ) : long<br/>- adjustStamp() : void<br/>- invalidateWeekFields() : void<br/>- writeObject(ObjectOutputStream param, ) : void<br/>- readObject(ObjectInputStream param, ) : void<br/>+ toInstant() : Instant<br/>+ compareTo(Object param, ) : int<br/>- clinit() : void<br/>}>];EagerBoiler->EagerBoiler [arrowhead="vee"];LazyBoiler->LazyBoiler [arrowhead="vee"];Runtime->Runtime [arrowhead="vee"];Desktop->Desktop [arrowhead="vee",style="dashed"];Calendar->Calendar [arrowhead="vee",style="dashed"];EagerBoiler[color=blue,shape = "record",label=<{singleton<br /> EagerBoiler|- instance : EagerBoiler<br/>|+ init() : void<br/>+ getInstance() : EagerBoiler<br/>- clinit() : void<br/>}>];LazyBoiler[color=blue,shape = "record",label=<{singleton<br /> LazyBoiler|- instance : LazyBoiler<br/>|+ init() : void<br/>+ getInstance() : LazyBoiler<br/>}>];Runtime[color=blue,shape = "record",label=<{singleton<br /> Runtime|- currentRuntime : Runtime<br/>|+ getRuntime() : Runtime<br/>- init() : void<br/>+ exit(int param, ) : void<br/>+ addShutdownHook(Thread param, ) : void<br/>+ removeShutdownHook(Thread param, ) : boolean<br/>+ halt(int param, ) : void<br/>+ runFinalizersOnExit(boolean param, ) : void<br/>+ exec(String param, ) : Process<br/>+ exec(String param, String[] param, ) : Process<br/>+ exec(String param, String[] param, File param, ) : Process<br/>+ exec(String[] param, ) : Process<br/>+ exec(String[] param, String[] param, ) : Process<br/>+ exec(String[] param, String[] param, File param, ) : Process<br/>+ availableProcessors() : int<br/>+ freeMemory() : long<br/>+ totalMemory() : long<br/>+ maxMemory() : long<br/>+ gc() : void<br/>- runFinalization0() : void<br/>+ runFinalization() : void<br/>+ traceInstructions(boolean param, ) : void<br/>+ traceMethodCalls(boolean param, ) : void<br/>+ load(String param, ) : void<br/>- load0( param, String param, ) : void<br/>+ loadLibrary(String param, ) : void<br/>- loadLibrary0( param, String param, ) : void<br/>+ getLocalizedInputStream(InputStream param, ) : InputStream<br/>+ getLocalizedOutputStream(OutputStream param, ) : OutputStream<br/>- clinit() : void<br/>}>];}
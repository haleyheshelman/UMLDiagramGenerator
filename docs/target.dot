digraph uml{rankdir=BT;splines=ortho;node[shape = box];App[shape = "record",label=<{ App|+ init() : void<br/>+ main(String[] param, ) : void<br/>}>];ArrayListAdaptor->Enumeration [arrowhead="onormal",style="dashed"];ArrayListAdaptor[shape = "record",label=<{ ArrayListAdaptor|- underlying : ArrayList:TE<br/>- iter : Iterator:TE<br/>|+ init(ArrayList:TE param, ) : void<br/>+ hasMoreElements() : boolean<br/>+ nextElement() : TE<br/>}>];LinearTransformer[shape = "record",label=<{ LinearTransformer|- enumTion : Enumeration:TT<br/>|+ init(Enumeration:TT param, ) : void<br/>+ transform(OutputStream param, ) : void<br/>}>];ArrayListAdaptor->TE [arrowhead="vee",label="1..n"];LinearTransformer->TT [arrowhead="vee",label="1..n"];App->Object [arrowhead="vee",style="dashed"];App->ArrayList [arrowhead="vee",style="dashed"];App->StringBuilder [arrowhead="vee",style="dashed"];App->ArrayListAdaptor [arrowhead="vee",style="dashed"];App->LinearTransformer [arrowhead="vee",style="dashed"];ArrayListAdaptor->Object [arrowhead="vee",style="dashed"];ArrayListAdaptor->ArrayList [arrowhead="vee",style="dashed"];ArrayListAdaptor->Iterator [arrowhead="vee",style="dashed"];LinearTransformer->Object [arrowhead="vee",style="dashed"];LinearTransformer->OutputStream [arrowhead="vee",style="dashed"];LinearTransformer->String [arrowhead="vee",style="dashed"];LinearTransformer->Enumeration [arrowhead="vee",style="dashed"];LinearTransformer->StringBuilder [arrowhead="vee",style="dashed"];}